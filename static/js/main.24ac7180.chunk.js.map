{"version":3,"sources":["components/NavBar.js","Utils.js","components/MyCard.js","components/Main.js","components/Footer.js","components/MySpinner.js","components/Comment.js","components/Comments.js","components/Article.js","components/ArticlePage.js","components/ErrorMsg.js","App.js","index.js"],"names":["NavBar","getSearchInput","search","fetchData","Row","id","className","Col","href","Image","src","process","rounded","alt","value","onChange","onKeyDown","e","key","type","placeholder","name","variant","size","onClick","Button","convertDate","date","year","substring","month","day","convertTime","MyCard","data","setArticleID","Card","Body","Subtitle","url","target","title","author","created_at","objectID","num_comments","Main","useState","currentPage","setCurrentPage","offset","currentPageData","slice","map","entry","pageCount","Math","ceil","length","Container","previousLabel","nextLabel","onPageChange","selectedPage","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Spinner","animation","Footer","MySpinner","Comment","comment","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","text","children","comments","Comments","Article","ArticlePage","articleID","singleArticle","setSingleArticle","isLoading","setIsLoading","useEffect","a","fetch","response","json","jsonRes","console","log","message","fetchArticle","App","setData","setSearch","error","setError","useRef","current","userInput","ok","res","hits","Error","intervalID","setInterval","clearInterval","ErrorMsg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24ac7180.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Image, Button } from 'react-bootstrap';\n\nconst NavBar = ({getSearchInput, search, fetchData}) => {\n\n    const _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            fetchData(search);\n          }\n    }\n\n    return (\n        <>\n            <Row id=\"nav\" className=\"col-12 md\">\n                <Col className=\"col-2\">\n                    <a href=\"index.html\">\n                        <Image id=\"logo\" src={process.env.PUBLIC_URL + '/logo.png'} rounded alt=\"Logo\" />\n                    </a>\n                </Col>\n                <Col className=\"col-3\">\n                    <div id=\"search\">\n                        <input\n                            value={search}\n                            onChange={getSearchInput}\n                            onKeyDown={_handleKeyDown}\n                            id=\"search-bar\"\n                            className=\"col-11\" \n                            type=\"text\" \n                            placeholder=\"Search...\"\n                            name=\"searchBar\">\n                        </input>\n                        <button id=\"search-btn\" variant=\"secondary\" size=\"lg\" className=\"btn btn-primary\">\n                            <i id=\"search-icon\" className=\"fas fa-search\" onClick={() => fetchData(search)}></i>\n                        </button>                  \n                    </div>\n                </Col>\n                <Button id=\"login-btn\" variant=\"secondary\" size=\"md\" className=\"btn btn-primary col-1\">Log in/Sign in</Button>\n            </Row>\n        </>\n    );\n}\n\nexport default NavBar;\n","\n    const convertDate = (date) => {\n        const year = date.substring(0, 4);\n        const month = date.substring(5, 7);\n        const day = date.substring(8, 10);\n        return `${day}.${month}.${year}`\n\n    }\n    \n    const convertTime = (date) => {\n        return date.substring(11, 16)\n    }\n\n\nexport {convertDate, convertTime};","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { convertDate, convertTime} from '../Utils';\n\n\nconst MyCard = ({ data, setArticleID }) => {\n\n    return (\n        <>\n            <Card className=\"shadow mb-3\">\n                <Card.Body>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                    <a href={data.url} target=\"blank_\" className=\"title\">{data.title}</a> \n                    </Card.Subtitle>\n                    <Row>\n                        <Col className=\"card-span author col-2\">{data.author}</Col>\n                        <Col className=\"col-2\">{convertDate(data.created_at)}</Col>\n                        <Col className=\"col-2\">{convertTime(data.created_at)}  <i className=\"far fa-clock\"></i></Col>\n                        <Col className=\"col-2\"><button className=\"btn btn-outline-dark card-span\" onClick={() => {setArticleID(data.objectID)}} >{data.num_comments} Comments </button></Col>\n                    </Row>                    \n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default MyCard;\n","import React, { useState } from 'react';\nimport MyCard from './MyCard';\nimport ReactPaginate from 'react-paginate';\nimport '../css/pagination.css';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\n\n\nconst Main = ({data, setArticleID }) => {\n    //  --- PAGINATION --- //\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const PER_PAGE = 10;\n    const offset = currentPage * PER_PAGE;\n\n    const currentPageData = data && data // map over entries and insert cards (paginated)\n        .slice(offset, offset + PER_PAGE)\n        .map((entry) => {return <MyCard key={entry.objectID} data={entry} setArticleID={setArticleID}/>});\n\n    let pageCount = 0;\n    if (data) {\n        pageCount = Math.ceil(data.length / PER_PAGE)\n    }\n    \n    const handlePageClick = ({ selected: selectedPage }) => {\n        setCurrentPage(selectedPage);\n    }\n\n    if (!data) {\n        return (\n            <Container>\n                <Row className=\"m-5 d-flex justify-content-center\">\n                    <h2 className=\"center mb-3\">Loading ... </h2>\n                    <Spinner animation=\"grow\" />\n                </Row>\n            </Container>\n        )\n    }\n    \n    return (\n        <Container>\n            <Row className=\"m-5 d-flex justify-content-center\">\n                {!data && <h1>hahahahah</h1>}\n                {currentPageData}\n                <Col className=\"col-3 mt-5\">\n                    <ReactPaginate\n                        previousLabel={<i className=\"fas fa-chevron-circle-left\"></i>}\n                        nextLabel={<i className=\"fas fa-chevron-circle-right\"></i>}\n                        pageCount={pageCount}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination\"}\n                        previousLinkClassName={\"pagination__link\"}\n                        nextLinkClassName={\"pagination__link\"}\n                        disabledClassName={\"pagination__link--disabled\"}\n                        activeClassName={\"pagination__link--active\"}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">     \n        <a className=\"footer-a\" href=\"index.html\" id=\"guidelines\">\n          Guidelines\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          FAQ\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          Lists\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          API\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          Security\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          Legal\n        </a>\n        <a className=\"footer-a\" href=\"index.html\">\n          Apply to CN\n        </a>\n        <a className=\"footer-a\" href=\"https://github.com/EmelineLmr/coderNews#\">\n          Contact\n        </a>\n        <Col className=\"text-md-right\" id=\"copyright\">\n          2021 © Copyright: Emeline, Alicia, Tim \n        </Col>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Spinner, Row, Container } from 'react-bootstrap';\n\nconst MySpinner = () => {\n    return (\n        <Container>\n            <Row className=\"m-5 d-flex justify-content-center\">\n                <h2 className=\"center mb-3\">Loading ... </h2>\n                <Spinner animation=\"grow\" />\n            </Row>\n        </Container>\n    );\n}\n\nexport default MySpinner;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport DOMPurify from 'dompurify';\nimport Comments from './Comments';\nimport { convertDate, convertTime} from '../Utils';\n\n\n\nconst Comment = ({ comment }) => {\n\n    return (\n        <>\n            <Container className=\"shadow-sm m-2\">\n            <Row className=\"row p-1\">\n                <Col className=\"col-6\"><p><b>{comment.author}</b> <small>on {convertTime(comment.created_at)}   <i className=\"far fa-clock\"></i></small></p> </Col>\n                <Col className=\"col-6 right\">\n                <span className=\"card-span m-5\">  {convertDate(comment.created_at)} </span>\n                </Col>  \n            </Row>\n            <p className=\"p-1\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(comment.text)}} />\n            </Container>\n            {comment.children && <Comments comments={comment.children}/>}\n       </>\n    );\n}\n\nexport default Comment;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Comment from './Comment';\n\nconst Comments = ({ comments }) => {\n\n    return (\n        <Container>\n     \n            {comments && comments.map((comment) => {\n                return (\n                    comment.text && <Comment key={comment.id} comment={comment} />\n                )\n            })}\n            \n        </Container>\n    );\n}\n\nexport default Comments;\n\n\n","import React from \"react\";\nimport { Card } from 'react-bootstrap';\nimport Comments from './Comments';\nimport { convertDate, convertTime} from '../Utils';\n\n\nconst Article = ({title, url, author, created_at, text, children}) => {\n\n    \n    return(\n        <>\n            <Card className=\"mb-3 pt-3\">\n                <Card.Body>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                        <a href={url} target=\"blank_\" className=\"title pr-5\">{title}</a> \n                    </Card.Subtitle>\n                    <span className=\"card-span m-3\">{author}  </span> \n                    <span className=\"card-span m-3\"> {created_at && convertDate(created_at)}  </span>\n                    <span className=\"card-span m-3\"> {created_at && convertTime(created_at)}   <i className=\"far fa-clock\"></i> </span>\n                    <span className=\"card-span m-3\"> {children ? children.length : 0} Comments  </span>\n\n                    {text ? <p>{text}</p> : <h6 className=\"my-5\"><a href={url} >{url}</a></h6>}\n                    <hr />\n                    <h4>Comments</h4>\n                    {children && <Comments comments={children} />}\n                    \n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default Article;","import React, { useState, useEffect} from 'react';\nimport { Container, Row, Spinner } from 'react-bootstrap';\n\nimport Article from './Article';\n\n\nconst ArticlePage = ({ articleID }) => {\n\n    const [singleArticle, setSingleArticle] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchArticle = async () => {\n          setIsLoading(true);\n          const url = `https://hn.algolia.com/api/v1/items/${articleID}`\n          try {\n            const response = await fetch(url);\n            const jsonRes = await response.json();\n            setIsLoading(false);\n            setSingleArticle({...jsonRes});\n          } catch (error) {\n            setIsLoading(false);\n            console.log(error.message);\n          }\n        };\n        fetchArticle();\n      }, [articleID]);\n\n\n    return (\n\n\n        <Container>\n            <Row className=\"m-5 d-flex justify-content-center\">\n\n            {isLoading && <>\n                <h2 className=\"center mb-3\">Loading ... </h2>\n                <Spinner animation=\"grow\" /> </>}\n\n                {!isLoading && \n                <>\n                    <Article {...singleArticle} />\n                </>}\n            </Row>\n        </Container>\n    );\n}\n\nexport default ArticlePage;\n","import React from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nconst MySpinner = () => {\n    return (\n        <Container>\n            <Row className=\"m-5 d-flex justify-content-center\">\n                <h2 className=\"center mb-3\">No matching entries ... </h2>\n            </Row>\n        </Container>\n    );\n}\n\nexport default MySpinner;\n","import React, { useState, useEffect, useRef } from 'react';\nimport NavBar from './components/NavBar';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport MySpinner from './components/MySpinner';\nimport ArticlePage from './components/ArticlePage';\nimport ErrorMsg from './components/ErrorMsg';\n\n\nfunction App() {\n\n  const [data, setData ] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [articleID, setArticleID] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchData = useRef(() => {})\n\n  fetchData.current = async (userInput) => {\n    setIsLoading(true);\n    setArticleID();\n    let url = `https://hn.algolia.com/api/v1/search_by_date?tags=front_page&hitsPerPage=100`;\n    if (userInput) {\n      url = `https://hn.algolia.com/api/v1/search_by_date?query=${search}&tags=story&hitsPerPage=100`;\n    }\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        const res = await response.json();\n        setIsLoading(false);\n        res.hits.length === 0 ? setError(true) : setError(false)\n        res && setData(res.hits);\n        \n      } else {\n        throw new Error(\"Request failed!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchData.current();\n    const intervalID = setInterval(() => {\n      fetchData.current();\n    }, 300000);\n\n    return () => clearInterval(intervalID);\n  }, []);\n\n\n  const getSearchInput = ({target}) => {\n    setSearch(target.value);\n  }\n\n  return (\n    <>\n      <NavBar getSearchInput={getSearchInput} search={search} fetchData={fetchData.current}/>\n      {!articleID ? \n          !isLoading ? error ? <ErrorMsg /> : <Main data={data} setArticleID={setArticleID}/>: <MySpinner />\n          : <ArticlePage articleID={articleID}/>}\n      \n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}